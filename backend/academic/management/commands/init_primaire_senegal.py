"""
Script pour initialiser les donn√©es de base pour une √©cole primaire du S√©n√©gal
"""
from django.core.management.base import BaseCommand
from academic.models import Matiere, Ecole
from django.db import transaction


class Command(BaseCommand):
    help = 'Initialise les mati√®res pour le syst√®me primaire s√©n√©galais'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üá∏üá≥ Initialisation syst√®me primaire S√©n√©gal...'))
        
        with transaction.atomic():
            # Mati√®res du primaire s√©n√©galais
            matieres_data = [
                # Disciplines fondamentales
                {
                    'nom': 'Fran√ßais',
                    'code': 'FR',
                    'coefficient': 4,
                    'description': 'Lecture, √©criture, expression orale et √©crite, grammaire, conjugaison, orthographe'
                },
                {
                    'nom': 'Math√©matiques',
                    'code': 'MATH',
                    'coefficient': 4,
                    'description': 'Num√©ration, op√©rations, g√©om√©trie, mesures, probl√®mes'
                },
                
                # Disciplines d'√©veil
                {
                    'nom': 'Sciences d\'Observation',
                    'code': 'SO',
                    'coefficient': 2,
                    'description': 'Observation de la nature, corps humain, hygi√®ne, environnement'
                },
                {
                    'nom': 'Histoire-G√©ographie',
                    'code': 'HG',
                    'coefficient': 2,
                    'description': 'Histoire du S√©n√©gal, g√©ographie locale et nationale, cartes'
                },
                {
                    'nom': 'Education Civique et Morale',
                    'code': 'ECM',
                    'coefficient': 1,
                    'description': 'Valeurs citoyennes, droits et devoirs, vie en soci√©t√©'
                },
                
                # Disciplines artistiques et sportives
                {
                    'nom': 'Education Physique et Sportive',
                    'code': 'EPS',
                    'coefficient': 1,
                    'description': 'Sport, jeux, √©ducation corporelle, sant√©'
                },
                {
                    'nom': 'Education Artistique',
                    'code': 'EA',
                    'coefficient': 1,
                    'description': 'Dessin, chant, arts plastiques, expression artistique'
                },
                
                # Langue nationale (optionnel)
                {
                    'nom': 'Langue Nationale',
                    'code': 'LN',
                    'coefficient': 1,
                    'description': 'Wolof, Serer, Pulaar ou autre langue nationale'
                },
            ]
            
            created_count = 0
            updated_count = 0
            
            for matiere_data in matieres_data:
                matiere, created = Matiere.objects.update_or_create(
                    code=matiere_data['code'],
                    defaults={
                        'nom': matiere_data['nom'],
                        'coefficient': matiere_data['coefficient'],
                        'description': matiere_data['description']
                    }
                )
                
                if created:
                    created_count += 1
                    self.stdout.write(
                        self.style.SUCCESS(f'‚úÖ Cr√©√©: {matiere.nom} (coef {matiere.coefficient})')
                    )
                else:
                    updated_count += 1
                    self.stdout.write(
                        self.style.WARNING(f'‚ö†Ô∏è  Mis √† jour: {matiere.nom}')
                    )
            
            self.stdout.write('')
            self.stdout.write(self.style.SUCCESS('=' * 60))
            self.stdout.write(self.style.SUCCESS(f'üìö {created_count} mati√®res cr√©√©es'))
            self.stdout.write(self.style.SUCCESS(f'üîÑ {updated_count} mati√®res mises √† jour'))
            self.stdout.write(self.style.SUCCESS(f'üìä Total des coefficients: {sum(m["coefficient"] for m in matieres_data)}'))
            self.stdout.write(self.style.SUCCESS('=' * 60))
            self.stdout.write('')
            self.stdout.write(self.style.SUCCESS('üéì Syst√®me primaire s√©n√©galais initialis√© avec succ√®s!'))
            self.stdout.write('')
            self.stdout.write('Prochaines √©tapes:')
            self.stdout.write('1. Cr√©er les classes (CI, CP, CE1, CE2, CM1, CM2)')
            self.stdout.write('2. Affecter les mati√®res aux classes')
            self.stdout.write('3. Assigner les professeurs')
